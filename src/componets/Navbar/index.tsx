import { FC, useState } from "react";
import styles from "./Navbar.module.css";
import LinkButton from "../Button";
import { Link } from "react-router-dom";
import { useScrollBlock } from "../../hooks/lock-scroll";
import { useAppContext } from "../../hooks/useModal";

const Navbar: FC = (): JSX.Element => {
  const [isNavExpanded, setIsNavExpanded] = useState(false);
  const [blockScroll, allowScroll] = useScrollBlock();
  const { toggle } = useAppContext();

  if (isNavExpanded) {
    blockScroll();
  } else {
    allowScroll();
  }

  const handleOpenMenu = () => {
    setIsNavExpanded(!isNavExpanded);
  };

  return (
    <nav className={styles.navigation}>
      <a href="/" className={styles.brand}>
        <div className={styles.box}>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="18"
            viewBox="0 0 16 18"
            fill="none"
          >
            <path
              d="M3.74561 17.8664C3.45582 17.8664 3.16975 17.7694 2.90226 17.5789C1.97345 16.9137 2.44157 16.0407 2.64219 15.6666C3.43353 14.1874 4.2323 12.6805 5.00507 11.222L5.36916 10.5326C5.42742 10.4191 5.34354 10.2832 5.21589 10.2832H4.81931C4.4255 10.2832 4.0354 10.2798 3.64901 10.2798C2.97656 10.2798 2.43042 10.2832 1.93258 10.2901H1.888C0.624825 10.2901 0.424203 9.58691 0.394481 9.28552C0.346183 8.78321 0.624825 8.13194 1.01121 7.83748C3.41867 5.99798 5.88929 4.15501 8.2819 2.37441C9.09924 1.76817 9.91288 1.15847 10.7302 0.548763C11.1055 0.268161 11.4584 0.133057 11.8076 0.133057C12.1011 0.133057 12.3835 0.230055 12.6547 0.420587C13.5872 1.08225 13.108 1.97256 12.9519 2.26702C12.1309 3.80513 11.3024 5.37095 10.4962 6.88828L10.1878 7.47374C10.1294 7.58764 10.2131 7.72396 10.3411 7.72464L10.7154 7.72662C11.1017 7.72662 11.4844 7.72662 11.8597 7.73009C12.5172 7.73009 13.0522 7.72662 13.5426 7.7197H13.6132C14.8207 7.7197 15.1216 8.26704 15.1625 8.72778C15.2071 9.23009 14.9024 9.90215 14.4863 10.2209C12.1792 11.9876 9.80514 13.7544 7.51284 15.4622C6.65463 16.1031 5.77041 16.7613 4.89733 17.416C4.60383 17.6204 4.21373 17.8664 3.74561 17.8664Z"
              fill="#FEC84B"
            />
            <path
              d="M14.2449 9.94021C11.0759 12.3652 7.85847 14.7416 4.65967 17.1319C4.17669 17.4922 3.68628 17.7001 3.129 17.3017C2.52342 16.8652 2.6906 16.3525 2.97667 15.819C3.89433 14.1077 4.79713 12.3929 5.70365 10.6815C5.88304 10.3416 5.61987 9.93303 5.2355 9.93207C4.09442 9.92921 3.00984 9.92344 1.92527 9.94021C1.34941 9.94713 0.810701 9.79817 0.762403 9.25082C0.725251 8.87669 0.937018 8.33281 1.24538 8.10071C4.45905 5.64457 7.71358 3.24041 10.957 0.815455C11.4214 0.465569 11.9044 0.320072 12.4245 0.690743C12.9929 1.09259 12.8926 1.58798 12.614 2.10761C11.6889 3.83972 10.7675 5.57529 9.84983 7.31433C9.67044 7.65427 9.93362 8.06285 10.318 8.06384C11.4313 8.06672 12.4871 8.07235 13.5428 8.05567C14.1372 8.04874 14.7316 8.15267 14.7836 8.74505C14.8208 9.13304 14.5719 9.69078 14.2449 9.94021Z"
              fill="#FEC84B"
            />
          </svg>
        </div>
        <span>vFlash</span>
      </a>
      <div
        className={
          isNavExpanded
            ? `${styles.menu} ${styles["expanded"]}`
            : `${styles.menu}`
        }
      >
        <ul>
          <li>
            <Link to="/">About us</Link>
          </li>
          <li>
            <Link to="#">Why us</Link>
          </li>
          <li>
            <Link to="#">Contacts</Link>
          </li>
        </ul>
        {isNavExpanded === true && (
          <div className={styles.menuBtns}>
            <LinkButton
              className="primary navbar"
              label="Join the Waitlist"
              href="#"
              onClick={toggle}
            />
          </div>
        )}
      </div>
      <div className={styles.btns}>
        {isNavExpanded === false && (
          <LinkButton
            className="primary navbar"
            label="Join the Waitlist"
            href="#"
            onClick={toggle}
          />
        )}
      </div>
      <button className={styles.hamburger} onClick={handleOpenMenu}>
        {isNavExpanded ? (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
          >
            <path
              d="M12.2 3.80665C11.94 3.54665 11.52 3.54665 11.26 3.80665L7.99998 7.05998L4.73998 3.79998C4.47998 3.53998 4.05998 3.53998 3.79998 3.79998C3.53998 4.05998 3.53998 4.47998 3.79998 4.73998L7.05998 7.99998L3.79998 11.26C3.53998 11.52 3.53998 11.94 3.79998 12.2C4.05998 12.46 4.47998 12.46 4.73998 12.2L7.99998 8.93998L11.26 12.2C11.52 12.46 11.94 12.46 12.2 12.2C12.46 11.94 12.46 11.52 12.2 11.26L8.93998 7.99998L12.2 4.73998C12.4533 4.48665 12.4533 4.05998 12.2 3.80665Z"
              fill="#101828"
            />
          </svg>
        ) : (
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            viewBox="0 0 16 16"
            fill="none"
          >
            <path
              d="M2.66667 12H13.3333C13.7 12 14 11.7 14 11.3333C14 10.9667 13.7 10.6667 13.3333 10.6667H2.66667C2.3 10.6667 2 10.9667 2 11.3333C2 11.7 2.3 12 2.66667 12ZM2.66667 8.66667H13.3333C13.7 8.66667 14 8.36667 14 8C14 7.63333 13.7 7.33333 13.3333 7.33333H2.66667C2.3 7.33333 2 7.63333 2 8C2 8.36667 2.3 8.66667 2.66667 8.66667ZM2 4.66667C2 5.03333 2.3 5.33333 2.66667 5.33333H13.3333C13.7 5.33333 14 5.03333 14 4.66667C14 4.3 13.7 4 13.3333 4H2.66667C2.3 4 2 4.3 2 4.66667Z"
              fill="#101828"
            />
          </svg>
        )}
      </button>
    </nav>
  );
};

export default Navbar;
